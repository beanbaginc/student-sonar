#!/usr/bin/env ./node_modules/.bin/babel-node

const Q = require('q'),
      init = require('../lib/init'),
      schema = require('../lib/schema');

function updateUser(user) {
    const deferred = Q.defer();

    if (user.is_bot) {
        deferred.resolve();
    } else {
        console.log('Saving data for %s (%s - %s)', user.real_name, user.name, user.id);

        try {
            let query = schema.User.findOneAndUpdate(
                { slack_user_id: user.id },
                {
                    email: user.profile.email,
                    slack_user_id: user.id,
                    slack_username: user.name,
                    name: user.real_name,
                    avatar: user.profile.image_192,
                    timezone: user.tz
                },
                { upsert: true },
                deferred.makeNodeResolver());
        } catch(e) {
            deferred.reject(e);
        }
    }

    return deferred.promise;
}

init()
    .then(function(options) {
        const slack = require('../lib/slack')(options.config);

        return slack.getUsers()
            .then(users => Promise.all(users.members.map(updateUser)));
    })
    .then(process.exit)
    .catch(console.error.bind(console));
